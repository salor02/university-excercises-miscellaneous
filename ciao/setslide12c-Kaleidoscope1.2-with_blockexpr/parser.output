Grammar

    0 $accept: startsymb "end of file"

    1 startsymb: program

    2 program: %empty
    3        | top ";" program

    4 top: %empty
    5    | definition
    6    | external

    7 definition: "def" proto exp

    8 external: "extern" proto

    9 proto: "id" "(" idseq ")"

   10 idseq: %empty
   11      | "id" idseq

   12 exp: exp "+" exp
   13    | exp "-" exp
   14    | exp "*" exp
   15    | exp "/" exp
   16    | idexp
   17    | "(" exp ")"
   18    | "number"
   19    | expif
   20    | blockexp

   21 blockexp: "{" vardefs ";" exp "}"

   22 vardefs: binding
   23        | vardefs ";" binding

   24 binding: "var" "id" "=" exp

   25 expif: condexp "?" exp ":" exp

   26 condexp: exp "<" exp
   27        | exp "==" exp

   28 idexp: "id"
   29      | "id" "(" optexp ")"

   30 optexp: %empty
   31       | explist

   32 explist: exp
   33        | exp "," explist


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    ";" (258) 3 21 23
    "," (259) 33
    "-" (260) 13
    "+" (261) 12
    "*" (262) 14
    "/" (263) 15
    "(" (264) 9 17 29
    ")" (265) 9 17 29
    "?" (266) 25
    ":" (267) 25
    "<" (268) 26
    "==" (269) 27
    "=" (270) 24
    "{" (271) 21
    "}" (272) 21
    "extern" (273) 8
    "def" (274) 7
    "var" (275) 24
    "id" <std::string> (276) 9 11 24 28 29
    "number" <double> (277) 18


Nonterminals, with rules where they appear

    $accept (23)
        on left: 0
    startsymb (24)
        on left: 1
        on right: 0
    program <RootAST*> (25)
        on left: 2 3
        on right: 1 3
    top <RootAST*> (26)
        on left: 4 5 6
        on right: 3
    definition <FunctionAST*> (27)
        on left: 7
        on right: 5
    external <PrototypeAST*> (28)
        on left: 8
        on right: 6
    proto <PrototypeAST*> (29)
        on left: 9
        on right: 7 8
    idseq <std::vector<std::string>> (30)
        on left: 10 11
        on right: 9 11
    exp <ExprAST*> (31)
        on left: 12 13 14 15 16 17 18 19 20
        on right: 7 12 13 14 15 17 21 24 25 26 27 32 33
    blockexp <BlockExprAST*> (32)
        on left: 21
        on right: 20
    vardefs <std::vector<VarBindingAST*>> (33)
        on left: 22 23
        on right: 21 23
    binding <VarBindingAST*> (34)
        on left: 24
        on right: 22 23
    expif <ExprAST*> (35)
        on left: 25
        on right: 19
    condexp <ExprAST*> (36)
        on left: 26 27
        on right: 25
    idexp <ExprAST*> (37)
        on left: 28 29
        on right: 16
    optexp <std::vector<ExprAST*>> (38)
        on left: 30 31
        on right: 29
    explist <std::vector<ExprAST*>> (39)
        on left: 32 33
        on right: 31 33


State 0

    0 $accept: . startsymb "end of file"
    1 startsymb: . program
    2 program: . %empty  ["end of file"]
    3        | . top ";" program
    4 top: . %empty  [";"]
    5    | . definition
    6    | . external
    7 definition: . "def" proto exp
    8 external: . "extern" proto

    "extern"  shift, and go to state 1
    "def"     shift, and go to state 2

    ";"       reduce using rule 4 (top)
    $default  reduce using rule 2 (program)

    startsymb   go to state 3
    program     go to state 4
    top         go to state 5
    definition  go to state 6
    external    go to state 7


State 1

    8 external: "extern" . proto
    9 proto: . "id" "(" idseq ")"

    "id"  shift, and go to state 8

    proto  go to state 9


State 2

    7 definition: "def" . proto exp
    9 proto: . "id" "(" idseq ")"

    "id"  shift, and go to state 8

    proto  go to state 10


State 3

    0 $accept: startsymb . "end of file"

    "end of file"  shift, and go to state 11


State 4

    1 startsymb: program .

    $default  reduce using rule 1 (startsymb)


State 5

    3 program: top . ";" program

    ";"  shift, and go to state 12


State 6

    5 top: definition .

    $default  reduce using rule 5 (top)


State 7

    6 top: external .

    $default  reduce using rule 6 (top)


State 8

    9 proto: "id" . "(" idseq ")"

    "("  shift, and go to state 13


State 9

    8 external: "extern" proto .

    $default  reduce using rule 8 (external)


State 10

    7 definition: "def" proto . exp
   12 exp: . exp "+" exp
   13    | . exp "-" exp
   14    | . exp "*" exp
   15    | . exp "/" exp
   16    | . idexp
   17    | . "(" exp ")"
   18    | . "number"
   19    | . expif
   20    | . blockexp
   21 blockexp: . "{" vardefs ";" exp "}"
   25 expif: . condexp "?" exp ":" exp
   26 condexp: . exp "<" exp
   27        | . exp "==" exp
   28 idexp: . "id"
   29      | . "id" "(" optexp ")"

    "("       shift, and go to state 14
    "{"       shift, and go to state 15
    "id"      shift, and go to state 16
    "number"  shift, and go to state 17

    exp       go to state 18
    blockexp  go to state 19
    expif     go to state 20
    condexp   go to state 21
    idexp     go to state 22


State 11

    0 $accept: startsymb "end of file" .

    $default  accept


State 12

    2 program: . %empty  ["end of file"]
    3        | . top ";" program
    3        | top ";" . program
    4 top: . %empty  [";"]
    5    | . definition
    6    | . external
    7 definition: . "def" proto exp
    8 external: . "extern" proto

    "extern"  shift, and go to state 1
    "def"     shift, and go to state 2

    ";"       reduce using rule 4 (top)
    $default  reduce using rule 2 (program)

    program     go to state 23
    top         go to state 5
    definition  go to state 6
    external    go to state 7


State 13

    9 proto: "id" "(" . idseq ")"
   10 idseq: . %empty  [")"]
   11      | . "id" idseq

    "id"  shift, and go to state 24

    $default  reduce using rule 10 (idseq)

    idseq  go to state 25


State 14

   12 exp: . exp "+" exp
   13    | . exp "-" exp
   14    | . exp "*" exp
   15    | . exp "/" exp
   16    | . idexp
   17    | . "(" exp ")"
   17    | "(" . exp ")"
   18    | . "number"
   19    | . expif
   20    | . blockexp
   21 blockexp: . "{" vardefs ";" exp "}"
   25 expif: . condexp "?" exp ":" exp
   26 condexp: . exp "<" exp
   27        | . exp "==" exp
   28 idexp: . "id"
   29      | . "id" "(" optexp ")"

    "("       shift, and go to state 14
    "{"       shift, and go to state 15
    "id"      shift, and go to state 16
    "number"  shift, and go to state 17

    exp       go to state 26
    blockexp  go to state 19
    expif     go to state 20
    condexp   go to state 21
    idexp     go to state 22


State 15

   21 blockexp: "{" . vardefs ";" exp "}"
   22 vardefs: . binding
   23        | . vardefs ";" binding
   24 binding: . "var" "id" "=" exp

    "var"  shift, and go to state 27

    vardefs  go to state 28
    binding  go to state 29


State 16

   28 idexp: "id" .  [";", ",", "-", "+", "*", "/", ")", "?", ":", "<", "==", "}"]
   29      | "id" . "(" optexp ")"

    "("  shift, and go to state 30

    $default  reduce using rule 28 (idexp)


State 17

   18 exp: "number" .

    $default  reduce using rule 18 (exp)


State 18

    7 definition: "def" proto exp .  [";"]
   12 exp: exp . "+" exp
   13    | exp . "-" exp
   14    | exp . "*" exp
   15    | exp . "/" exp
   26 condexp: exp . "<" exp
   27        | exp . "==" exp

    "-"   shift, and go to state 31
    "+"   shift, and go to state 32
    "*"   shift, and go to state 33
    "/"   shift, and go to state 34
    "<"   shift, and go to state 35
    "=="  shift, and go to state 36

    $default  reduce using rule 7 (definition)


State 19

   20 exp: blockexp .

    $default  reduce using rule 20 (exp)


State 20

   19 exp: expif .

    $default  reduce using rule 19 (exp)


State 21

   25 expif: condexp . "?" exp ":" exp

    "?"  shift, and go to state 37


State 22

   16 exp: idexp .

    $default  reduce using rule 16 (exp)


State 23

    3 program: top ";" program .

    $default  reduce using rule 3 (program)


State 24

   10 idseq: . %empty  [")"]
   11      | . "id" idseq
   11      | "id" . idseq

    "id"  shift, and go to state 24

    $default  reduce using rule 10 (idseq)

    idseq  go to state 38


State 25

    9 proto: "id" "(" idseq . ")"

    ")"  shift, and go to state 39


State 26

   12 exp: exp . "+" exp
   13    | exp . "-" exp
   14    | exp . "*" exp
   15    | exp . "/" exp
   17    | "(" exp . ")"
   26 condexp: exp . "<" exp
   27        | exp . "==" exp

    "-"   shift, and go to state 31
    "+"   shift, and go to state 32
    "*"   shift, and go to state 33
    "/"   shift, and go to state 34
    ")"   shift, and go to state 40
    "<"   shift, and go to state 35
    "=="  shift, and go to state 36


State 27

   24 binding: "var" . "id" "=" exp

    "id"  shift, and go to state 41


State 28

   21 blockexp: "{" vardefs . ";" exp "}"
   23 vardefs: vardefs . ";" binding

    ";"  shift, and go to state 42


State 29

   22 vardefs: binding .

    $default  reduce using rule 22 (vardefs)


State 30

   12 exp: . exp "+" exp
   13    | . exp "-" exp
   14    | . exp "*" exp
   15    | . exp "/" exp
   16    | . idexp
   17    | . "(" exp ")"
   18    | . "number"
   19    | . expif
   20    | . blockexp
   21 blockexp: . "{" vardefs ";" exp "}"
   25 expif: . condexp "?" exp ":" exp
   26 condexp: . exp "<" exp
   27        | . exp "==" exp
   28 idexp: . "id"
   29      | . "id" "(" optexp ")"
   29      | "id" "(" . optexp ")"
   30 optexp: . %empty  [")"]
   31       | . explist
   32 explist: . exp
   33        | . exp "," explist

    "("       shift, and go to state 14
    "{"       shift, and go to state 15
    "id"      shift, and go to state 16
    "number"  shift, and go to state 17

    $default  reduce using rule 30 (optexp)

    exp       go to state 43
    blockexp  go to state 19
    expif     go to state 20
    condexp   go to state 21
    idexp     go to state 22
    optexp    go to state 44
    explist   go to state 45


State 31

   12 exp: . exp "+" exp
   13    | . exp "-" exp
   13    | exp "-" . exp
   14    | . exp "*" exp
   15    | . exp "/" exp
   16    | . idexp
   17    | . "(" exp ")"
   18    | . "number"
   19    | . expif
   20    | . blockexp
   21 blockexp: . "{" vardefs ";" exp "}"
   25 expif: . condexp "?" exp ":" exp
   26 condexp: . exp "<" exp
   27        | . exp "==" exp
   28 idexp: . "id"
   29      | . "id" "(" optexp ")"

    "("       shift, and go to state 14
    "{"       shift, and go to state 15
    "id"      shift, and go to state 16
    "number"  shift, and go to state 17

    exp       go to state 46
    blockexp  go to state 19
    expif     go to state 20
    condexp   go to state 21
    idexp     go to state 22


State 32

   12 exp: . exp "+" exp
   12    | exp "+" . exp
   13    | . exp "-" exp
   14    | . exp "*" exp
   15    | . exp "/" exp
   16    | . idexp
   17    | . "(" exp ")"
   18    | . "number"
   19    | . expif
   20    | . blockexp
   21 blockexp: . "{" vardefs ";" exp "}"
   25 expif: . condexp "?" exp ":" exp
   26 condexp: . exp "<" exp
   27        | . exp "==" exp
   28 idexp: . "id"
   29      | . "id" "(" optexp ")"

    "("       shift, and go to state 14
    "{"       shift, and go to state 15
    "id"      shift, and go to state 16
    "number"  shift, and go to state 17

    exp       go to state 47
    blockexp  go to state 19
    expif     go to state 20
    condexp   go to state 21
    idexp     go to state 22


State 33

   12 exp: . exp "+" exp
   13    | . exp "-" exp
   14    | . exp "*" exp
   14    | exp "*" . exp
   15    | . exp "/" exp
   16    | . idexp
   17    | . "(" exp ")"
   18    | . "number"
   19    | . expif
   20    | . blockexp
   21 blockexp: . "{" vardefs ";" exp "}"
   25 expif: . condexp "?" exp ":" exp
   26 condexp: . exp "<" exp
   27        | . exp "==" exp
   28 idexp: . "id"
   29      | . "id" "(" optexp ")"

    "("       shift, and go to state 14
    "{"       shift, and go to state 15
    "id"      shift, and go to state 16
    "number"  shift, and go to state 17

    exp       go to state 48
    blockexp  go to state 19
    expif     go to state 20
    condexp   go to state 21
    idexp     go to state 22


State 34

   12 exp: . exp "+" exp
   13    | . exp "-" exp
   14    | . exp "*" exp
   15    | . exp "/" exp
   15    | exp "/" . exp
   16    | . idexp
   17    | . "(" exp ")"
   18    | . "number"
   19    | . expif
   20    | . blockexp
   21 blockexp: . "{" vardefs ";" exp "}"
   25 expif: . condexp "?" exp ":" exp
   26 condexp: . exp "<" exp
   27        | . exp "==" exp
   28 idexp: . "id"
   29      | . "id" "(" optexp ")"

    "("       shift, and go to state 14
    "{"       shift, and go to state 15
    "id"      shift, and go to state 16
    "number"  shift, and go to state 17

    exp       go to state 49
    blockexp  go to state 19
    expif     go to state 20
    condexp   go to state 21
    idexp     go to state 22


State 35

   12 exp: . exp "+" exp
   13    | . exp "-" exp
   14    | . exp "*" exp
   15    | . exp "/" exp
   16    | . idexp
   17    | . "(" exp ")"
   18    | . "number"
   19    | . expif
   20    | . blockexp
   21 blockexp: . "{" vardefs ";" exp "}"
   25 expif: . condexp "?" exp ":" exp
   26 condexp: . exp "<" exp
   26        | exp "<" . exp
   27        | . exp "==" exp
   28 idexp: . "id"
   29      | . "id" "(" optexp ")"

    "("       shift, and go to state 14
    "{"       shift, and go to state 15
    "id"      shift, and go to state 16
    "number"  shift, and go to state 17

    exp       go to state 50
    blockexp  go to state 19
    expif     go to state 20
    condexp   go to state 21
    idexp     go to state 22


State 36

   12 exp: . exp "+" exp
   13    | . exp "-" exp
   14    | . exp "*" exp
   15    | . exp "/" exp
   16    | . idexp
   17    | . "(" exp ")"
   18    | . "number"
   19    | . expif
   20    | . blockexp
   21 blockexp: . "{" vardefs ";" exp "}"
   25 expif: . condexp "?" exp ":" exp
   26 condexp: . exp "<" exp
   27        | . exp "==" exp
   27        | exp "==" . exp
   28 idexp: . "id"
   29      | . "id" "(" optexp ")"

    "("       shift, and go to state 14
    "{"       shift, and go to state 15
    "id"      shift, and go to state 16
    "number"  shift, and go to state 17

    exp       go to state 51
    blockexp  go to state 19
    expif     go to state 20
    condexp   go to state 21
    idexp     go to state 22


State 37

   12 exp: . exp "+" exp
   13    | . exp "-" exp
   14    | . exp "*" exp
   15    | . exp "/" exp
   16    | . idexp
   17    | . "(" exp ")"
   18    | . "number"
   19    | . expif
   20    | . blockexp
   21 blockexp: . "{" vardefs ";" exp "}"
   25 expif: . condexp "?" exp ":" exp
   25      | condexp "?" . exp ":" exp
   26 condexp: . exp "<" exp
   27        | . exp "==" exp
   28 idexp: . "id"
   29      | . "id" "(" optexp ")"

    "("       shift, and go to state 14
    "{"       shift, and go to state 15
    "id"      shift, and go to state 16
    "number"  shift, and go to state 17

    exp       go to state 52
    blockexp  go to state 19
    expif     go to state 20
    condexp   go to state 21
    idexp     go to state 22


State 38

   11 idseq: "id" idseq .

    $default  reduce using rule 11 (idseq)


State 39

    9 proto: "id" "(" idseq ")" .

    $default  reduce using rule 9 (proto)


State 40

   17 exp: "(" exp ")" .

    $default  reduce using rule 17 (exp)


State 41

   24 binding: "var" "id" . "=" exp

    "="  shift, and go to state 53


State 42

   12 exp: . exp "+" exp
   13    | . exp "-" exp
   14    | . exp "*" exp
   15    | . exp "/" exp
   16    | . idexp
   17    | . "(" exp ")"
   18    | . "number"
   19    | . expif
   20    | . blockexp
   21 blockexp: . "{" vardefs ";" exp "}"
   21         | "{" vardefs ";" . exp "}"
   23 vardefs: vardefs ";" . binding
   24 binding: . "var" "id" "=" exp
   25 expif: . condexp "?" exp ":" exp
   26 condexp: . exp "<" exp
   27        | . exp "==" exp
   28 idexp: . "id"
   29      | . "id" "(" optexp ")"

    "("       shift, and go to state 14
    "{"       shift, and go to state 15
    "var"     shift, and go to state 27
    "id"      shift, and go to state 16
    "number"  shift, and go to state 17

    exp       go to state 54
    blockexp  go to state 19
    binding   go to state 55
    expif     go to state 20
    condexp   go to state 21
    idexp     go to state 22


State 43

   12 exp: exp . "+" exp
   13    | exp . "-" exp
   14    | exp . "*" exp
   15    | exp . "/" exp
   26 condexp: exp . "<" exp
   27        | exp . "==" exp
   32 explist: exp .  [")"]
   33        | exp . "," explist

    ","   shift, and go to state 56
    "-"   shift, and go to state 31
    "+"   shift, and go to state 32
    "*"   shift, and go to state 33
    "/"   shift, and go to state 34
    "<"   shift, and go to state 35
    "=="  shift, and go to state 36

    $default  reduce using rule 32 (explist)


State 44

   29 idexp: "id" "(" optexp . ")"

    ")"  shift, and go to state 57


State 45

   31 optexp: explist .

    $default  reduce using rule 31 (optexp)


State 46

   12 exp: exp . "+" exp
   13    | exp . "-" exp
   13    | exp "-" exp .  [";", ",", "-", "+", ")", "?", ":", "<", "==", "}"]
   14    | exp . "*" exp
   15    | exp . "/" exp
   26 condexp: exp . "<" exp
   27        | exp . "==" exp

    "*"  shift, and go to state 33
    "/"  shift, and go to state 34

    $default  reduce using rule 13 (exp)

    Conflict between rule 13 and token "-" resolved as reduce (%left "-").
    Conflict between rule 13 and token "+" resolved as reduce (%left "+").
    Conflict between rule 13 and token "*" resolved as shift ("-" < "*").
    Conflict between rule 13 and token "/" resolved as shift ("-" < "/").
    Conflict between rule 13 and token "<" resolved as reduce ("<" < "-").
    Conflict between rule 13 and token "==" resolved as reduce ("==" < "-").


State 47

   12 exp: exp . "+" exp
   12    | exp "+" exp .  [";", ",", "-", "+", ")", "?", ":", "<", "==", "}"]
   13    | exp . "-" exp
   14    | exp . "*" exp
   15    | exp . "/" exp
   26 condexp: exp . "<" exp
   27        | exp . "==" exp

    "*"  shift, and go to state 33
    "/"  shift, and go to state 34

    $default  reduce using rule 12 (exp)

    Conflict between rule 12 and token "-" resolved as reduce (%left "-").
    Conflict between rule 12 and token "+" resolved as reduce (%left "+").
    Conflict between rule 12 and token "*" resolved as shift ("+" < "*").
    Conflict between rule 12 and token "/" resolved as shift ("+" < "/").
    Conflict between rule 12 and token "<" resolved as reduce ("<" < "+").
    Conflict between rule 12 and token "==" resolved as reduce ("==" < "+").


State 48

   12 exp: exp . "+" exp
   13    | exp . "-" exp
   14    | exp . "*" exp
   14    | exp "*" exp .  [";", ",", "-", "+", "*", "/", ")", "?", ":", "<", "==", "}"]
   15    | exp . "/" exp
   26 condexp: exp . "<" exp
   27        | exp . "==" exp

    $default  reduce using rule 14 (exp)

    Conflict between rule 14 and token "-" resolved as reduce ("-" < "*").
    Conflict between rule 14 and token "+" resolved as reduce ("+" < "*").
    Conflict between rule 14 and token "*" resolved as reduce (%left "*").
    Conflict between rule 14 and token "/" resolved as reduce (%left "/").
    Conflict between rule 14 and token "<" resolved as reduce ("<" < "*").
    Conflict between rule 14 and token "==" resolved as reduce ("==" < "*").


State 49

   12 exp: exp . "+" exp
   13    | exp . "-" exp
   14    | exp . "*" exp
   15    | exp . "/" exp
   15    | exp "/" exp .  [";", ",", "-", "+", "*", "/", ")", "?", ":", "<", "==", "}"]
   26 condexp: exp . "<" exp
   27        | exp . "==" exp

    $default  reduce using rule 15 (exp)

    Conflict between rule 15 and token "-" resolved as reduce ("-" < "/").
    Conflict between rule 15 and token "+" resolved as reduce ("+" < "/").
    Conflict between rule 15 and token "*" resolved as reduce (%left "*").
    Conflict between rule 15 and token "/" resolved as reduce (%left "/").
    Conflict between rule 15 and token "<" resolved as reduce ("<" < "/").
    Conflict between rule 15 and token "==" resolved as reduce ("==" < "/").


State 50

   12 exp: exp . "+" exp
   13    | exp . "-" exp
   14    | exp . "*" exp
   15    | exp . "/" exp
   26 condexp: exp . "<" exp
   26        | exp "<" exp .  ["?"]
   27        | exp . "==" exp

    "-"   shift, and go to state 31
    "+"   shift, and go to state 32
    "*"   shift, and go to state 33
    "/"   shift, and go to state 34
    "<"   shift, and go to state 35
    "=="  shift, and go to state 36

    $default  reduce using rule 26 (condexp)


State 51

   12 exp: exp . "+" exp
   13    | exp . "-" exp
   14    | exp . "*" exp
   15    | exp . "/" exp
   26 condexp: exp . "<" exp
   27        | exp . "==" exp
   27        | exp "==" exp .  ["?"]

    "-"   shift, and go to state 31
    "+"   shift, and go to state 32
    "*"   shift, and go to state 33
    "/"   shift, and go to state 34
    "<"   shift, and go to state 35
    "=="  shift, and go to state 36

    $default  reduce using rule 27 (condexp)


State 52

   12 exp: exp . "+" exp
   13    | exp . "-" exp
   14    | exp . "*" exp
   15    | exp . "/" exp
   25 expif: condexp "?" exp . ":" exp
   26 condexp: exp . "<" exp
   27        | exp . "==" exp

    "-"   shift, and go to state 31
    "+"   shift, and go to state 32
    "*"   shift, and go to state 33
    "/"   shift, and go to state 34
    ":"   shift, and go to state 58
    "<"   shift, and go to state 35
    "=="  shift, and go to state 36


State 53

   12 exp: . exp "+" exp
   13    | . exp "-" exp
   14    | . exp "*" exp
   15    | . exp "/" exp
   16    | . idexp
   17    | . "(" exp ")"
   18    | . "number"
   19    | . expif
   20    | . blockexp
   21 blockexp: . "{" vardefs ";" exp "}"
   24 binding: "var" "id" "=" . exp
   25 expif: . condexp "?" exp ":" exp
   26 condexp: . exp "<" exp
   27        | . exp "==" exp
   28 idexp: . "id"
   29      | . "id" "(" optexp ")"

    "("       shift, and go to state 14
    "{"       shift, and go to state 15
    "id"      shift, and go to state 16
    "number"  shift, and go to state 17

    exp       go to state 59
    blockexp  go to state 19
    expif     go to state 20
    condexp   go to state 21
    idexp     go to state 22


State 54

   12 exp: exp . "+" exp
   13    | exp . "-" exp
   14    | exp . "*" exp
   15    | exp . "/" exp
   21 blockexp: "{" vardefs ";" exp . "}"
   26 condexp: exp . "<" exp
   27        | exp . "==" exp

    "-"   shift, and go to state 31
    "+"   shift, and go to state 32
    "*"   shift, and go to state 33
    "/"   shift, and go to state 34
    "<"   shift, and go to state 35
    "=="  shift, and go to state 36
    "}"   shift, and go to state 60


State 55

   23 vardefs: vardefs ";" binding .

    $default  reduce using rule 23 (vardefs)


State 56

   12 exp: . exp "+" exp
   13    | . exp "-" exp
   14    | . exp "*" exp
   15    | . exp "/" exp
   16    | . idexp
   17    | . "(" exp ")"
   18    | . "number"
   19    | . expif
   20    | . blockexp
   21 blockexp: . "{" vardefs ";" exp "}"
   25 expif: . condexp "?" exp ":" exp
   26 condexp: . exp "<" exp
   27        | . exp "==" exp
   28 idexp: . "id"
   29      | . "id" "(" optexp ")"
   32 explist: . exp
   33        | . exp "," explist
   33        | exp "," . explist

    "("       shift, and go to state 14
    "{"       shift, and go to state 15
    "id"      shift, and go to state 16
    "number"  shift, and go to state 17

    exp       go to state 43
    blockexp  go to state 19
    expif     go to state 20
    condexp   go to state 21
    idexp     go to state 22
    explist   go to state 61


State 57

   29 idexp: "id" "(" optexp ")" .

    $default  reduce using rule 29 (idexp)


State 58

   12 exp: . exp "+" exp
   13    | . exp "-" exp
   14    | . exp "*" exp
   15    | . exp "/" exp
   16    | . idexp
   17    | . "(" exp ")"
   18    | . "number"
   19    | . expif
   20    | . blockexp
   21 blockexp: . "{" vardefs ";" exp "}"
   25 expif: . condexp "?" exp ":" exp
   25      | condexp "?" exp ":" . exp
   26 condexp: . exp "<" exp
   27        | . exp "==" exp
   28 idexp: . "id"
   29      | . "id" "(" optexp ")"

    "("       shift, and go to state 14
    "{"       shift, and go to state 15
    "id"      shift, and go to state 16
    "number"  shift, and go to state 17

    exp       go to state 62
    blockexp  go to state 19
    expif     go to state 20
    condexp   go to state 21
    idexp     go to state 22


State 59

   12 exp: exp . "+" exp
   13    | exp . "-" exp
   14    | exp . "*" exp
   15    | exp . "/" exp
   24 binding: "var" "id" "=" exp .  [";"]
   26 condexp: exp . "<" exp
   27        | exp . "==" exp

    "-"   shift, and go to state 31
    "+"   shift, and go to state 32
    "*"   shift, and go to state 33
    "/"   shift, and go to state 34
    "<"   shift, and go to state 35
    "=="  shift, and go to state 36

    $default  reduce using rule 24 (binding)


State 60

   21 blockexp: "{" vardefs ";" exp "}" .

    $default  reduce using rule 21 (blockexp)


State 61

   33 explist: exp "," explist .

    $default  reduce using rule 33 (explist)


State 62

   12 exp: exp . "+" exp
   13    | exp . "-" exp
   14    | exp . "*" exp
   15    | exp . "/" exp
   25 expif: condexp "?" exp ":" exp .  [";", ",", ")", "?", ":", "}"]
   26 condexp: exp . "<" exp
   27        | exp . "==" exp

    "-"   shift, and go to state 31
    "+"   shift, and go to state 32
    "*"   shift, and go to state 33
    "/"   shift, and go to state 34
    "<"   shift, and go to state 35
    "=="  shift, and go to state 36

    $default  reduce using rule 25 (expif)

    Conflict between rule 25 and token "-" resolved as shift (":" < "-").
    Conflict between rule 25 and token "+" resolved as shift (":" < "+").
    Conflict between rule 25 and token "*" resolved as shift (":" < "*").
    Conflict between rule 25 and token "/" resolved as shift (":" < "/").
    Conflict between rule 25 and token "<" resolved as shift (":" < "<").
    Conflict between rule 25 and token "==" resolved as shift (":" < "==").
